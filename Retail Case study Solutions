select * from customer
select *FROM prod_cat_info
SELECT * FROM Transactions
 USE RETAIL_DATA
 
--DATA PREP. AND UNDERSTANDING---

--1 WHAT IS THE TOTAL NUMBER OF ROWS IN EACH OF THE THREE TABLES ?
		SELECT 'CUSTOMER' AS CUSTOMER, COUNT(*) AS TOTAL_ROWS FROM customer
		SELECT 'PROD_CAT_INFO' AS PROD_INFO, COUNT(*) AS TOTAL_ROWS FROM prod_cat_info
		SELECT 'TRANSACTONS' AS TRANSACTIONS, COUNT(*) AS TOTAL_ROWS FROM Transactions;

					2ND METHOD----

			SELECT 
			    'CUSTOMER' AS TBL, 
			    COUNT(*) AS TotalRows 
						FROM 
						    CUSTOMER
						UNION ALL
						SELECT 
								'PROD_CAT_INFO' AS PROD_INFO, 
								COUNT(*) AS TotalRows 
					FROM 
					    PROD_CAT_INFO
					UNION ALL
					SELECT 
					    'TRANSACTIONS' AS TRANSACTIONS, 
					    COUNT(*) AS TotalRows 
					FROM 
			              Transactions;


	2--WHAT IS THE TOTAL NUMBER OF TRANSACTIONS THAT HAVE A RETURN ?
	SELECT 
	COUNT(*) AS TOTAL_TRAN
	FROM
	Transactions
	WHERE Qty <0;

	3--FORMAT DATE

	SELECT *, 
	FORMAT(TRAN_DATE,'MM-dd-yyyy') AS TRAN_DTE FROM Transactions  
	

	SELECT *,
	FORMAT(DOB, 'MM-dd-yyyy') AS DOB FROM customer


	alter table customer
alter column DOB date
alter table transactions
alter column tran_date date


4-- WHAT IS THE TIME RANGE OF THE TRANSACTION DATA AVAILBLE FOR ANYLYSIS ? 
--  SHOW THE OUTPUT IN NUMBER OF DAYS,MONTHS,YEARS SIMULTANEOUSLY IN DIFFRENT COULMNS.

SELECT TRAN_DATE, DATEPART(YEAR,TRAN_DATE) AS YEARS, MONTH(TRAN_DATE) AS MONTHS, DAY(TRAN_DATE) AS DY
FROM Transactions
select DATEDIFF(day, (select min(tran_date) from transactions), (select max(tran_date) from transactions)) as days_diff,
SELECT DATEDIFF(YEAR,MIN(TRAN_DATE),MAX(TRAN_DATE)) AS YEARS
SELECT DATEDIFF(MONTH,MIN(TRAN_DATE), MAX(TRAN_DATE)) AS MONTHS
SELECT DATEDIFF (DAY,MIN (TRAN_DATE), MAX(TRAN_DATE)) AS DATE0
 FROM Transactions


5--WHICH PRODUCT CATEGORY DOES THE SUB-CATEGORY "DIY" BELONGS TO ?
SELECT *
FROM prod_cat_info
WHERE prod_subcat = 'DIY'


--DATA ANYLYSIS--
1--WHAT CHANNEL IS MOST FREQUENTLY USED FOR TRANSACTIONS ?
SELECT TOP 1
    Store_type AS MOST_FREQUENT_CHANNEL,
    COUNT(Store_type) AS TOT_TRANSACTIONS
FROM
    Transactions
GROUP BY
    Store_type
ORDER BY
    TOT_TRANSACTIONS DESC;

2--WHAT IS THE COUNT OF THE DATABASE 


	SELECT 
	COUNT(*) AS TOT_GENDER
	FROM
	customer
	WHERE Gender = 'M' OR GENDER = 'F'



3-- FROM WHICH CITY DO WE HAVE THE MAXIMUM NUMBER OF CUSTOMERS AND HOW MANY ?

     SELECT MAX(CITY_CODE) AS MAX_CUST
	          FROM customer

	SELECT COUNT(*) AS NUM_CUST
	FROM customer
	WHERE city_code =(SELECT MAX(city_code) FROM customer);
	
	

	4--HOW MANY SUB_CATEGORY ARE THERE UNDER THE BOOKS CATEGORY?
	
	SELECT *
	FROM prod_cat_info
	WHERE prod_cat = 'BOOKS'

	5-- WHAT IS THE MAXIMUM QUANTITY OF PRODUCT EVER ORDERED ?
			
		SELECT MAX(prod_sub_cat_code) AS MAX_QTY
		FROM prod_cat_info
		


	6-- WHAT IS THE NET TOTAL REVENUE GENERATED IN CATEGORIES ELECTRONIC AND BOOKS ?
	

        M1------
		
		SELECT P.prod_cat AS Product_Category,
       
	   SUM(CAST(T.TOTAL_AMT AS FLOAT)) AS Net_Total_Revenue
        
		FROM PROD_CAT_INFO AS P
		
		INNER JOIN TRANSACTIONS AS T 
		
		ON P.PROD_CAT_CODE = T.PROD_CAT_CODE
		
		WHERE P.PROD_CAT IN ('ELECTRONICS', 'BOOKS')
				 
				 GROUP BY P.PROD_CAT;



				 SELECT P.PROD_CAT_CODE, PROD_CAT,
				 SUM(T.TOTAL_AMT - TAX) AS NET_REV
				 FROM Transactions AS T
				 INNER JOIN prod_cat_info AS P 
				 ON P.PROD_CAT_CODE = T.PROD_CAT_CODE
				 WHERE P.PROD_CAT IN ('ELECTRONICS','BOOKS')
				 GROUP BY P.prod_cat_code , prod_cat 
				


	7-- HOW MANY CUSTOMERS HAVE >10 TRANSACTIONS WITH US, EXCLUDING RETURNS ?
		
	
			SELECT COUNT(*) AS CUST_TRAN_10
				 FROM 
				 (
				SELECT CUST_ID 
						FROM Transactions 
							WHERE QTY > 0
							GROUP BY cust_id
							HAVING COUNT(TRANSACTION_ID) > 10
							)AS CUST;




	8--WHAT IS THE TOTAL REVENUE EARNED FROM THE "ELECTRONICS" & "CLOTHING" CATEGORIES, 
	--FROM "FLAGSHIP STORES" ?

			SELECT PROD_CAT, SUM(TOTAL_AMT) AS TOT_REV,STORE_TYPE
							FROM PROD_CAT_INFO AS P 
								INNER JOIN TRANSACTIONS AS T
								ON P.PROD_CAT_CODE =  T.PROD_CAT_CODE
									WHERE STORE_TYPE = ('FLAGSHIP STORE') AND PROD_CAT IN ('ELECTRONICS','CLOTHING')
									GROUP BY PROD_CAT, STORE_TYPE






	9-- WHAT  IS TOTAL REVENUE GENRATED FROM "MALE" CUSTOMERS  FROM "ELECTRONICS" CATEGORY ? 
	--OUPUT SHOULD DISPLAY TOTAL REVENUE  BY SUB-CAT.


	SELECT T.prod_CAT_CODE AS SUBCAT,
			SUM(T.TOTAL_AMT) AS TOTAL_REV
				FROM TRANSACTIONS AS T 

			     	INNER JOIN  CUSTOMER AS C
							ON C.CUSTOMER_ID = T.CUST_ID			
				
						INNER JOIN PROD_CAT_INFO AS P
						ON T.PROD_CAT_CODE = P.PROD_SUB_CAT_CODE

			WHERE C.GENDER LIKE 'M' 
		AND P.PROD_CAT IN (SELECT PROD_CAT
	FROM PROD_CAT_INFO
	WHERE PROD_CAT LIKE 'ELECTRONICS'
	)

	GROUP BY T.PROD_CAT_CODE;




	10-- WHAT IS PERCENTAGE OF SALES AND RETURNS BY SUB_CATEGORIES; 
	 --    DISPLAY ONLY TOP 5 CATEGORIES IN TERMS OF SALES.				

SELECT TOP 5
    [SUB_CATEGORY],
    SUM(SALES) AS SALES,
    SUM([RETURNS]) AS [RETURNS]
FROM (
    SELECT 
        PROD_SUBCAT_CODE AS [SUB_CATEGORY],
        SUM(CASE WHEN TOTAL_AMT > 0 THEN TOTAL_AMT ELSE 0 END) AS SALES,
        SUM(CASE WHEN TOTAL_AMT < 0 THEN ABS(TOTAL_AMT) ELSE 0 END) AS [RETURNS]
    FROM TRANSACTIONS 
    GROUP BY PROD_SUBCAT_CODE
) AS X
GROUP BY [SUB_CATEGORY]
ORDER BY SALES DESC;







select * from customer
select *FROM prod_cat_info
SELECT * FROM Transactions




			

	11-- FOR ALL CUSTOMERS AGED BETWEEN 25 TO 35 YEARS FIND WHAT IS THE NET TOTAL REVENUE GENRATED BY 
	--THESE CUSTOMERS IN LAST 30 DAYS OF TRANSACTIONS FROM MAX TRANSACTIONS DATE AVAILBLE IN THE DATA ?

		SELECT SUM(TOTAL_AMT - TAX) AS TOT_REVENUE
				FROM customeR AS C 
					INNER JOIN Transactions as t
						on t.cust_id = c.customer_Id
							where DATEDIFF(YEAR,DOB,GETDATE())  
								BETWEEN 25 AND 35 
								AND TRAN_DATE >= (SELECT DATEADD(DAY,-30, MAX(TRAN_DATE)) FROM Transactions)

 

	12-- WHICH PRODUCT CATEGORIES HAS SEEN THE MAX VALUE OF RETURNS IN THE LAST 3 MONTHS OF TRANSACTIONS ?

	SELECT TOP 1 P.PROD_CAT,
				SUM(CASE WHEN TOTAL_AMT < 0 THEN TOTAL_AMT ELSE 0 END) AS TOTAL_REVENUE
						FROM TRANSACTIONS AS T
								INNER JOIN 
									PROD_CAT_INFO AS P
										ON T.PROD_CAT_CODE = P.PROD_CAT_CODE 
											WHERE T.TRAN_DATE > DATEADD(MONTH, -3, (SELECT MAX(T.TRAN_DATE) FROM Transactions AS T))
												GROUP BY P.PROD_CAT
												ORDER BY TOTAL_REVENUE DESC;


	13-- WHICH STORE_TYPE SELLS THE MAXIMUM PRODUCTS; BY VALUE OF SALES AMOUNT AND BY QUANTITY SOLD ?
	
	SELECT TOP 1 Store_type,
			SUM(TOTAL_AMT) AS TOTAL_SALE
				FROM Transactions
					GROUP BY Store_type
						ORDER BY TOTAL_SALE DESC;


	14-- WHAT ARE THE CATEGORIES FOR WHICH AVERAGE IS ABOVE THE OVERALL AVERAGE.
	SELECT PROD_CAT_CODE,AVG(TOTAL_AMT) AS TOT_AVG 
			FROM TRANSACTIONS
				GROUP BY PROD_CAT_CODE
					HAVING AVG(total_amt) > (SELECT AVG(total_amt)
						FROM Transactions
						);



	15-- FIND THE AVERAGE AND TOTAL REVENUE BY EACH SUB-CATEGORY FOR THE CATEGORIES WHICH ARE AMONG TOP  5 CATEGORIES 
	 --   IN THE TERMS OF QUANTITY SOLD.



			 SELECT PROD_CAT, PROD_SUBCAT, 
				 AVG(TOTAL_AMT) AS AVG_REVENUE, 
					 SUM(TOTAL_AMT) AS TOTAL_REVENUE 
						 FROM PROD_CAT_INFO P

			INNER JOIN Transactions AS T
					ON T.prod_cat_code = P.prod_cat_code
						AND T.prod_cat_code = P.prod_cat_code
								WHERE prod_cat IN  (
										SELECT prod_cat 
										  FROM (
												SELECT TOP 5 prod_cat, SUM(QTY) AS QUANTITY 
												FROM prod_cat_info AS P 
									    INNER JOIN Transactions AS T
												     ON T.prod_cat_code = P.prod_cat_code
												     AND T.prod_subcat_code = P.prod_sub_cat_code
															 GROUP BY prod_cat
															 ORDER BY QUANTITY DESC
															   ) AS X
																)
																GROUP BY PROD_CAT, prod_subcat;
															





	 
